{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/helpers/extend.js","src/index.js","src/lib/receiver.js","src/lib/sender.js"],"names":[],"mappings":"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","file":"build.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default function extend(base, ...parts) {\n  const res = base;\n\n  parts.forEach((p) => {\n    if (p && typeof (p) === 'object') {\n      for (const k in p) {\n        if (p.hasOwnProperty(k)) {\n          res[k] = p[k];\n        }\n      }\n    }\n  });\n\n  return res;\n}\n","import sender from './lib/sender';\nimport receiver from './lib/receiver';\n\n// Use module.exports instead of export default for easier global usage\nmodule.exports = {\n  sender,\n  receiver,\n};\n","const receiver = {\n\n};\n\nexport default receiver;\n","/* globals chrome */\n\nimport extend from '../helpers/extend';\n\nconst noop = () => {};\n\nlet session;\n\nconst errorHandler = (message) => {\n  console.log(`onError: ${JSON.stringify(message)}`);\n};\n\nconst successHandler = (message) => {\n  console.log(`onSuccess: ${JSON.stringify(message)}`);\n};\n\nconst sender = {\n  create(userOpts, debug = false) {\n    const defaults = {\n      namespace: 'urn:x-cast:com.wiljan.test',\n      applicationID: '12345678',\n      onError: (debug) ? errorHandler : noop,\n      onSuccess: (debug) ? successHandler : noop,\n      onInitSuccess: (debug) ? successHandler : noop,\n      onStopAppSuccess: (debug) ? successHandler : noop,\n      onSessionSuccess: (debug) ? successHandler : noop,\n      onReceiversSuccess: (debug) ? successHandler : noop,\n      onReceiversError: (debug) ? successHandler : noop,\n    };\n\n    this.opts = extend({}, defaults, userOpts);\n\n    // Wait for Cast API to be available\n    window.__onGCastApiAvailable = (loaded, errorInfo) => {\n      if (loaded) {\n        this.initializeCastApi();\n      } else {\n        throw new Error(errorInfo);\n      }\n    };\n  },\n\n  initializeCastApi() {\n    // Initialize session with application ID\n    const sessionRequest = new chrome.cast.SessionRequest(\n      this.opts.applicationID\n    );\n\n    // Create configuration with a few callback methods\n    const apiConfig = new chrome.cast.ApiConfig(\n      sessionRequest,\n      this.sessionListener.bind(this),\n      this.receiverListener.bind(this)\n    );\n\n    // Initialize the API\n    chrome.cast.initialize(\n      apiConfig,\n      this.opts.onInitSuccess.bind(this, { message: 'Initialisation successful' }),\n      this.opts.onError\n    );\n  },\n\n  /**\n   * Called after a session has been established\n   * @param  {Object} e Session object\n   * @return {Void}\n   */\n  sessionListener(e) {\n    this.opts.onSessionSuccess({ sessionId: e.sessionId });\n\n    // Save session to variable for later usage\n    session = e;\n\n    // Keep alive listener\n    session.addUpdateListener(\n      this.sessionUpdateListener\n    );\n  },\n\n  /**\n   * Callback from the session on update\n   * @param  {Boolean} isAlive Is the connection still alive\n   * @return {Void}\n   */\n  sessionUpdateListener(isAlive) {\n    if (!isAlive) {\n      session = null;\n    }\n  },\n\n  /**\n   * Callback for receivers\n   * @param  {String} e Available or unavailable\n   * @return {Void}\n   */\n  receiverListener(e) {\n    // Check if any receivers are available\n    if (e === chrome.cast.ReceiverAvailability.AVAILABLE) {\n      this.opts.onReceiversSuccess({ message: 'Receivers available' });\n    } else {\n      this.opts.onReceiversError({ message: 'No receivers available' });\n    }\n  },\n\n  /**\n   * Check if a session is available, if not create one\n   * @param  {Function} cb Callback after a session has been found or created\n   * @return {Void}\n   */\n  checkSession(cb) {\n    // If a session is available we can immediately callback\n    if (session) {\n      cb.call();\n    } else {\n      // Request a new session\n      chrome.cast.requestSession((e) => {\n        // Save session\n        session = e;\n\n        // Call the session callback\n        this.sessionListener(e);\n\n        // Callback\n        cb.call();\n      }, this.opts.onError);\n    }\n  },\n\n  /**\n   * Send a message to the receiver\n   * @param  {Object} message Object to send to the receiver\n   * @return {Void}\n   */\n  sendMessage(message) {\n    // First check if a session is available\n    this.checkSession(() => {\n      // Send a message with the session\n      session.sendMessage(\n        this.opts.namespace,\n        message,\n        this.opts.onSuccess.bind(this, message),\n        this.opts.onError\n      );\n    });\n  },\n\n  /**\n   * Launch the application by sending the first message\n   * @return {Void}\n   */\n  launch() {\n    this.sendMessage({ message: 'launch' });\n  },\n\n  /**\n   * Stop the application\n   * @return {Void}\n   */\n  stop() {\n    if (session) {\n      session.stop(\n        this.opts.onStopAppSuccess,\n        this.opts.onError\n      );\n    }\n  },\n};\n\nexport default sender;\n"]}